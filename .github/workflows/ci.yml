name: CI

on:
  push:
    branches: [master, main]
  pull_request:
    branches: [master, main]

env:
  NODE_VERSION: "18.x"

jobs:
  # 代码质量检查
  lint:
    name: Lint & Type Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run ESLint
        run: pnpm run lint:check

      - name: Check TypeScript
        run: npx tsc --noEmit

  # Docker 构建测试 - 包含应用构建
  docker-build:
    name: Docker Build & Test
    runs-on: ubuntu-latest
    needs: lint
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: olivia-web:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Test Docker image build success
        run: |
          echo "✅ Docker 镜像构建成功"
          docker images | grep olivia-web || echo "未找到镜像，但构建可能成功"

  # PR 状态检查
  pr-check:
    name: PR Ready Check
    runs-on: ubuntu-latest
    needs: [lint, docker-build]
    if: github.event_name == 'pull_request'

    steps:
      - name: PR Status
        run: |
          echo "✅ All checks passed! PR is ready for review."
          echo "- Linting: ✅"
          echo "- Type Check: ✅"
          echo "- Docker Build: ✅"
