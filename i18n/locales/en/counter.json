{
  "title": "MobX State Management Test",
  "subtitle": "Verify MobX's cross-component reactive state management capabilities through multiple independent components",
  "display": {
    "title": "Counter Display",
    "description": "Current counter value, automatically responds to state changes"
  },
  "controls": {
    "title": "Counter Controls",
    "increment": "Increment",
    "decrement": "Decrement",
    "reset": "Reset"
  },
  "history": {
    "title": "Operation History",
    "empty": "No operation history yet"
  },
  "stats": {
    "title": "Real-time Statistics",
    "totalOps": "Total Operations",
    "maxValue": "Max Value",
    "minValue": "Min Value",
    "avgValue": "Average Value"
  },
  "crossPage": {
    "title": "Cross-page State",
    "currentPage": "Current Page",
    "pageChanges": "Page Changes"
  },
  "mobx": {
    "title": "MobX Features",
    "reactive": "Reactive State Updates",
    "computed": "Computed Properties Auto-calculation",
    "persistent": "State Persistence Storage",
    "crossComponent": "Cross-component State Sharing",
    "testGuide": {
      "title": "Test Guide",
      "step1": "Click buttons to observe all components sync update",
      "step2": "Switch pages to verify state persistence",
      "step3": "Refresh page to confirm state recovery",
      "step4": "Watch statistics data change in real-time"
    }
  },
  "currentValue": "Current Count Value",
  "times": "times",
  "mobxReactive": "MobX Reactive",
  "themeSync": "Theme Sync",
  "quickActions": "Quick Actions",
  "stateInfo": "MobX State Information",
  "counterValue": "Counter Value",
  "currentTheme": "Current Theme",
  "themeSwitch": "Theme Switch",
  "currentPage": "Current Page",
  "availableThemes": "Available Themes",
  "dataPersistence": "Data Persistence",
  "enabled": "Enabled",
  "testGuide": "Test Guide",
  "basicTests": "Basic Function Tests",
  "stateTests": "State Management Tests",
  "testPoints": {
    "clickButtons": "Click +/- buttons to test counter response",
    "quickActions": "Use quick action buttons to test batch updates",
    "observeChanges": "Observe real-time feedback of value changes",
    "testReset": "Test reset button for state reset functionality",
    "switchPages": "Switch to theme page and return, data persists",
    "refreshPage": "Refresh browser page, data recovers from localStorage",
    "switchTheme": "Switch themes, counter state unaffected",
    "reactiveUpdate": "All operations are reactive, UI updates immediately"
  },
  "actions": {
    "increment": "Increment",
    "decrement": "Decrement",
    "reset": "Reset",
    "addValue": "Add {{value}}",
    "subtractValue": "Subtract {{value}}"
  }
}
